<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.icent.isaver.admin.dao.EventLogDao" >

    <resultMap id="eventLogResultMap" type="EventLogBean">
        <id property="eventLogId" column="eventLogId"/>
        <result property="areaId" column="areaId"/>
        <result property="areaName" column="areaName"/>
        <result property="deviceId" column="deviceId"/>
        <result property="deviceName" column="deviceName"/>
        <result property="eventId" column="eventId"/>
        <result property="eventName" column="eventName"/>
        <result property="eventDatetime" column="eventDatetime"/>
        <result property="insertUserId" column="insertUserId"/>
        <result property="insertDatetime" column="insertDatetime"/>
        <result property="updateUserId" column="updateUserId"/>
        <result property="updateDatetime" column="updateDatetime"/>
        <collection property="infos" ofType="EventLogInfoBean">
            <id property="key" column="key"/>
            <result property="value" column="value"/>
        </collection>
    </resultMap>

    <!--
        이벤트로그 목록을 가져온다.
        @author psb
    -->
    <select id="findListEventLog" resultType="EventLogBean" parameterType="map" >
        SELECT  A.event_log_id as eventLogId
                , AREA.area_name as areaName
                , DEVICE.device_name as deviceName
                , EVENT.event_name as eventName
                , event_datetime as eventDatetime
                , to_char(event_datetime,'yyyy-MM-dd HH24:MI:ss') as eventDatetimeStr
        FROM    isaver.event_log as A
        INNER JOIN isaver.area as AREA
        ON      A.area_id = AREA.area_id
        INNER JOIN isaver.device AS DEVICE
        ON      A.device_id = DEVICE.device_id
        INNER JOIN isaver.event AS EVENT
        ON      A.event_id = EVENT.event_id
        AND     EVENT.del_yn ='N'
        <where>
            <if test="areaId != null and areaId != ''">
              AND     AREA.area_id = #{areaId}
            </if>
            <if test="deviceCode != null and deviceCode != ''">
              AND     DEVICE.device_code  = #{deviceCode}
            </if>
            <if test="startDatetimeStr != null and startDatetimeStr != ''">
              AND     A.event_datetime <![CDATA[ >= ]]> (#{startDatetimeStr} || ' ' || #{startDatetimeHour} ||':00:00')::timestamp
            </if>
            <if test="endDatetimeStr != null and endDatetimeStr != ''">
              AND     A.event_datetime <![CDATA[ <= ]]> (#{endDatetimeStr} || ' ' || #{endDatetimeHour} ||':59:59')::timestamp
            </if>
        </where>
        ORDER BY A.event_datetime DESC
        <if test="pageIndex != null">
          LIMIT       ${pageRowNumber} OFFSET ${pageIndex}
        </if>;
    </select>

    <!--
        이벤트로그 목록 갯수를 가져온다.
        @author psb
    -->
    <select id="findCountEventLog" parameterType="map" resultType="java.lang.Integer" >
        SELECT  count(A.event_log_id)
        FROM    isaver.event_log as A
        INNER JOIN isaver.area as AREA
        ON      A.area_id = AREA.area_id
        INNER JOIN (
            SELECT  device_id, device_code, code_name
            FROM    isaver.device as DEV
            INNER JOIN (
                SELECT    code_id, code_name FROM isaver.code
                WHERE     group_code_id = 'DEV'
            ) AS CODE
            ON      DEV.device_code = CODE.code_id
        ) AS DEVICE
        ON      A.device_id = DEVICE.device_id
        INNER JOIN isaver.event AS EVENT
        ON      A.event_id = EVENT.event_id
        AND     EVENT.del_yn ='N'
        <where>
            <if test="areaId != null and areaId != ''">
                AND     AREA.area_id = #{areaId}
            </if>
            <if test="deviceCode != null and deviceCode != ''">
                AND     DEVICE.device_code  = #{deviceCode}
            </if>
            <if test="startDatetimeStr != null and startDatetimeStr != ''">
                AND     A.event_datetime <![CDATA[ >= ]]> (#{startDatetimeStr} || ' ' || #{startDatetimeHour} ||':00:00')::timestamp
            </if>
            <if test="endDatetimeStr != null and endDatetimeStr != ''">
                AND     A.event_datetime <![CDATA[ <= ]]> (#{endDatetimeStr} || ' ' || #{endDatetimeHour} ||':59:59')::timestamp
            </if>
        </where>
    </select>

    <!--
        이벤트로그 목록을 가져온다. (대쉬보드)
        @author psb
    -->
    <select id="findListEventLogForDashboard" parameterType="map" resultMap="eventLogResultMap">
        SELECT  A.event_log_id as eventLogId
                , A.area_id as areaId
                , AREA.area_name as areaName
                , A.device_id as deviceId
                , DEVICE.device_name as deviceName
                , A.event_id as eventId
                , EVENT.event_name as eventName
                , A.event_datetime as eventDatetime
                , b.key as key
                , b.value as value
        FROM  isaver.event_log A
        INNER JOIN isaver.device AS DEVICE
        ON    A.device_id = DEVICE.device_id
        INNER JOIN isaver.area AREA
        ON      A.area_id = AREA.area_id
        AND     AREA.del_yn ='N'
        INNER JOIN isaver.event EVENT
        ON      A.event_id = EVENT.event_id
        AND     EVENT.del_yn ='N'
        INNER JOIN isaver.event_log_info b
        ON    a.event_log_id = b.event_log_id
        INNER JOIN isaver.notification c
        ON    a.event_log_id = c.event_log_id
        AND   c.cancel_user_id is null
        WHERE	a.area_id in (
            WITH RECURSIVE AREA_HIERACHY(area_id, parentAreaId) AS (
                SELECT  b.area_id, b.parent_area_id
                FROM    isaver.area b
                where   b.del_yn = 'N'
                <if test="areaId != null and areaId != ''">
                    AND area_id = #{areaId}
                </if>
                UNION ALL
                SELECT  c.area_id, c.parent_area_id
                FROM    isaver.area c
                JOIN    AREA_HIERACHY d
                ON      c.parent_area_id = d.area_id
                WHERE   c.del_yn = 'N'
            )
            SELECT  e.area_id
            FROM    AREA_HIERACHY e
        )
        ORDER BY A.event_datetime
    </select>

    <!--
        이벤트로그 차트 목록을 가져온다.
        @author psb
    -->
    <select id="findListEventLogChart" parameterType="map" resultType="EventLogBean">
        SELECT  series.minute as eventDatetime, coalesce(cnt.amnt1,0) as value
        FROM (
            <if test="deviceId != null and deviceId != ''">
                SELECT  max((select c.value from isaver.event_log_info c where b.event_log_id = c.event_log_id and c.key = 'value')::float) as amnt1
                        , date_trunc(#{truncType}, to_timestamp(extract('epoch' from event_datetime)) AT TIME ZONE 'UTC') as interval_alias
                FROM    isaver.event_log b
                WHERE   b.area_id = #{areaId}
                AND     b.device_id = #{deviceId}
                <if test="eventId != null and eventId != ''">
                    AND     b.event_id = #{eventId}
                </if>
                GROUP BY interval_alias
            </if>
            <if test="deviceId == null or deviceId == ''">
                SELECT  sum((select c.value from isaver.event_log_info c where b.event_log_id = c.event_log_id and c.key = 'outCount')::float) as amnt1
                        , date_trunc(#{truncType}, to_timestamp(extract('epoch' from event_datetime)) AT TIME ZONE 'UTC') as interval_alias
                FROM    isaver.event_log b
                WHERE   b.area_id = #{areaId}
                GROUP BY interval_alias
            </if>
        ) cnt
        RIGHT JOIN (
            select generate_series(
                        date_trunc(#{truncType}, date_trunc(#{dateType}, now()))::timestamp
                        <if test="dateType == 'day'">
                            , (date_trunc(#{dateType}, date_trunc(#{dateType}, now())) + INTERVAL '1 day' - INTERVAL '1 hour')::timestamp
                            , '1 hour'::interval
                        </if>
                        <if test="dateType == 'week'">
                            , (date_trunc(#{dateType}, date_trunc(#{dateType}, now())) + INTERVAL '1 week' - INTERVAL '1 day')::timestamp
                            , '1 day'::interval
                        </if>
                        <if test="dateType == 'month'">
                            , (date_trunc(#{dateType}, date_trunc(#{dateType}, now())) + INTERVAL '1 month' - INTERVAL '1 week')::timestamp
                            , '1 week'::interval
                        </if>
                        <if test="dateType == 'year'">
                            , (date_trunc(#{dateType}, date_trunc(#{dateType}, now())) + INTERVAL '1 year' - INTERVAL '1 month')::timestamp
                            , '1 month'::interval
                        </if>
                    ) as minute
            ORDER BY minute DESC
        ) series
        ON series.minute = cnt.interval_alias
        ORDER BY eventDatetime DESC
    </select>

    <!--
        이벤트로그 구역별 목록을 가져온다. (진출입)
        @author psb
    -->
    <select id="findListEventLogBlinkerForArea" parameterType="map" resultType="EventLogBean">
        SELECT  areaId
                ,inoutStarttime as startDatetime
                ,inoutEndtime as endDatetime
                ,(
                    SELECT  sum(c.value::integer)
                    FROM    isaver.event_log b
                    INNER JOIN isaver.event_log_info c
                    ON      b.event_log_id = c.event_log_id
                    AND 	c.key = 'inCount'
                    WHERE 	b.event_datetime between inoutStarttime::timestamp and inoutEndtime::timestamp
                    AND	    b.area_id = INOUT_SET.areaId
                ) as inCount
                ,(
                    SELECT  sum(c.value::integer)
                    FROM    isaver.event_log b
                    INNER JOIN isaver.event_log_info c
                    ON	    b.event_log_id = c.event_log_id
                    AND 	c.key = 'outCount'
                    WHERE 	b.event_datetime between inoutStarttime::timestamp and inoutEndtime::timestamp
                    AND	    b.area_id = INOUT_SET.areaId
                ) as outCount
        FROM	(
            SELECT  a.area_id as areaId
                    ,CASE
                        WHEN inout.startDatetime is null THEN (to_char(now(),'yyyy-mm-dd 00:00:00'))::timestamp
                        ELSE inout.startDatetime
                    END as inoutStarttime
                    ,CASE
                        WHEN inout.endDatetime is null THEN (to_char(now(),'yyyy-mm-dd 23:59:59'))::timestamp
                        ELSE inout.endDatetime
                    END as inoutEndtime
            FROM    isaver.area a
            LEFT OUTER JOIN(
                SELECT	area_id
                        ,(to_char(now(),'yyyy-mm-dd') || ' ' || inout_starttime)::timestamp as startDatetime
                        ,(to_char(now(),'yyyy-mm-dd') || ' ' || inout_endtime)::timestamp as endDatetime
                FROM	isaver.inout_configuration
                WHERE   user_id = #{userId}
                AND		to_char(now(),'hh24:mi:ss') between inout_starttime and inout_endtime
            ) inout
            ON      a.area_id = inout.area_id
            WHERE	a.area_id in
            <foreach collection="areaIds" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        ) INOUT_SET
    </select>

    <!--
        이벤트로그 구역별 목록을 가져온다. (화장실재실)
        @author psb
    -->
    <select id="findByEventLogToiletRoomForArea" parameterType="map" resultType="EventLogBean">
        SELECT	event_datetime as eventDatetime
                , info.value as status
        FROM	isaver.event_log a
        INNER JOIN isaver.event_log_info info
        ON	    a.event_log_id = info.event_log_id
        AND	    info.key = 'status'
        <if test="status != null and status != ''">
            AND	    info.value = #{status}
        </if>
        WHERE	a.event_id = 'EVT017'
        AND	    a.area_id = #{areaId}
        ORDER BY event_datetime desc
        LIMIT 1
    </select>

    <!--
        이벤트로그 구역별 목록을 가져온다. (진출입)
        @author psb
    -->
    <select id="findListEventLogBlinkerForAreaBackup" parameterType="map" resultType="EventLogBean">
        SELECT  areaId
                ,inoutStarttime as startDatetime
                ,inoutEndtime as endDatetime
                ,(
                    SELECT  sum(c.value::integer)
                    FROM    isaver.event_log b
                    INNER JOIN isaver.event_log_info c
                    ON      b.event_log_id = c.event_log_id
                    AND 	c.key = 'inCount'
                    WHERE 	b.event_datetime between inoutStarttime::timestamp and inoutEndtime::timestamp
                    AND	    b.area_id = INOUT_SET.areaId
                ) as inCount
                ,(
                    SELECT  sum(c.value::integer)
                    FROM    isaver.event_log b
                    INNER JOIN isaver.event_log_info c
                    ON	    b.event_log_id = c.event_log_id
                    AND 	c.key = 'outCount'
                    WHERE 	b.event_datetime between inoutStarttime::timestamp and inoutEndtime::timestamp
                    AND	    b.area_id = INOUT_SET.areaId
                ) as outCount
        FROM	(
            WITH RECURSIVE INOUT_SET_HIERACHY(areaId, startTime, endTime, inoutStarttime, inoutEndtime) as (
                SELECT  a.area_id
                        ,inout.startDatetime
                        ,inout.endDatetime
                        ,CASE
                            WHEN inout.startDatetime is null THEN (to_char(now(),'yyyy-mm-dd 00:00:00'))::timestamp
                            ELSE inout.startDatetime
                        END
                        ,CASE
                            WHEN inout.endDatetime is null THEN (to_char(now(),'yyyy-mm-dd 23:59:59'))::timestamp
                            ELSE inout.endDatetime
                        END
                FROM    isaver.area a
                LEFT OUTER JOIN(
                    SELECT	area_id
                            ,CASE
                                    WHEN to_char(now(),'hh24:mi:ss') between inout_starttime and inout_endtime THEN (to_char(now(),'yyyy-mm-dd') || ' ' || inout_starttime)::timestamp
                                    WHEN to_char(now(),'hh24:mi:ss') > inout_starttime THEN (to_char(now(),'yyyy-mm-dd') || ' ' || inout_starttime)::timestamp
                                    ELSE (to_char(now() - interval '1 day','yyyy-mm-dd') || ' ' || inout_starttime)::timestamp
                            END as startDatetime
                            ,CASE
                                WHEN to_char(now(),'hh24:mi:ss') between inout_starttime and inout_endtime THEN (to_char(now(),'yyyy-mm-dd') || ' ' || inout_endtime)::timestamp
                                WHEN to_char(now(),'hh24:mi:ss') > inout_endtime THEN (to_char(now(),'yyyy-mm-dd') || ' ' || inout_endtime)::timestamp
                                ELSE (to_char(now() - interval '1 day','yyyy-mm-dd') || ' ' || inout_endtime)::timestamp
                            END as endDatetime
                    FROM	isaver.inout_configuration
                    WHERE   user_id = #{userId}
                ) inout
                ON      a.area_id = inout.area_id
                WHERE	a.area_id in
                <foreach collection="areaIds" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
                UNION ALL
                SELECT  a.area_id
                        ,null
                        ,null
                        ,b.inoutStarttime - interval '1 day'
                        ,b.inoutEndtime - interval '1 day'
                FROM	isaver.area a
                INNER JOIN	INOUT_SET_HIERACHY b
                ON		a.area_id = b.areaId
                WHERE	b.inoutStarttime = (to_char(now(),'yyyy-mm-dd 00:00:00'))::timestamp
                AND	    b.inoutEndtime = (to_char(now(),'yyyy-mm-dd 23:59:59'))::timestamp
            )
            SELECT  areaId
                    , startTime
                    , endTime
                    , inoutStarttime
                    , inoutEndtime
            FROM    INOUT_SET_HIERACHY
            ORDER BY areaId, inoutStarttime DESC
        ) INOUT_SET
    </select>

    <!--
        이벤트로그 상세를 가져온다.
        @author psb
    -->
    <select id="findByEventLog" resultMap="eventLogResultMap" parameterType="map" >
        SELECT  A.event_log_id as eventLogId
                , area_id as areaId
                , device_id as deviceId
                , event_id as eventId
                , event_datetime as eventDatetime
                , insert_user_id as insertUserId
                , insert_datetime as insertDatetime
                , update_user_id as updateUserId
                , update_datetime as updateDatetime
                , b.key as key
                , b.value as value
        FROM  isaver.event_log a
        LEFT OUTER JOIN isaver.event_log_info b
        ON    a.event_log_id = b.event_log_id
        WHERE a.event_log_id = #{eventLogId,jdbcType=VARCHAR}
    </select>
</mapper>