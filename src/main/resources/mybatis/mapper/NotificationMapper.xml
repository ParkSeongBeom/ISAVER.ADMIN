<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.icent.isaver.admin.dao.NotificationDao" >

    <!--
        알림센터 이력 목록을 가져온다.
        @author psb
    -->
    <select id="findListNotification" resultType="NotificationBean" parameterType="map" >
        SELECT  A.notification_id as notificationId
                , A.event_log_id as eventLogId
                , A.object_id as objectId
                , A.fence_id as fenceId
                , f.fence_name as fenceName
                , A.status as status
                , A.area_id as areaId
                , AREA.area_name as areaName
                , A.device_id as deviceId
                , DEVICE.device_name as deviceName
                , A.event_id as eventId
                , EVENT.event_name as eventName
                , A.event_datetime as eventDatetime
                , to_char(A.event_datetime,'yyyy-MM-dd HH24:MI:ss') as eventDatetimeStr
                , A.critical_level as criticalLevel
                , COD.code_name as criticalLevelName
                , A.confirm_user_id as confirmUserId
                , (select user_name from isaver.users where user_id=A.confirm_user_id) as confirmUserName
                , A.confirm_datetime as confirmDatetime
                , A.cancel_user_id as cancelUserId
                , (select user_name from isaver.users where user_id=A.cancel_user_id) as cancelUserName
                , A.cancel_datetime as cancelDatetime
                , A.cancel_desc as cancelDesc
                , A.insert_user_id as insertUserId
                , (select user_name from isaver.users where user_id=A.insert_user_id) as insertUserName
                , A.insert_datetime as insertDatetime
                , A.update_user_id as updateUserId
                , (select user_name from isaver.users where user_id=A.update_user_id) as updateUserName
                , A.update_datetime as updateDatetime
                , A.value as value
                , A.tracking_json as trackingJson
                , (select count(*) from external.noti_send_log sendLog where A.notification_id = sendLog.notification_id) as sendCnt
        FROM    isaver.notification as A
        INNER JOIN isaver.area AREA
        ON      A.area_id = AREA.area_id
        INNER JOIN isaver.code COD
        ON      A.critical_level = COD.code_id
        AND     COD.group_code_id = 'LEV'
        INNER JOIN isaver.device AS DEVICE
        ON      A.device_id = DEVICE.device_id
        INNER JOIN isaver.event EVENT
        ON      A.event_id = EVENT.event_id
        LEFT OUTER JOIN isaver.fence f
        ON      A.fence_id = f.fence_id
        AND 	A.device_id = f.device_id
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="areaId != null and areaId != ''">
                AND     AREA.area_id = #{areaId}
            </if>
            <if test="deviceCode != null and deviceCode != ''">
                AND     DEVICE.device_code  = #{deviceCode}
            </if>
            <if test="eventId != null and eventId != ''">
                AND     A.event_id  = #{eventId}
            </if>
            <if test="fenceId != null and fenceId != ''">
                AND     A.fence_id  = #{fenceId}
            </if>
            <if test="criticalLevel != null and criticalLevel != ''">
                AND     A.critical_level  = #{criticalLevel}
            </if>
            <if test="startDatetimeStr != null and startDatetimeStr != ''">
                AND     A.event_datetime <![CDATA[ >= ]]> (#{startDatetimeStr} || ' ' || #{startDatetimeHour} ||':00:00')::timestamp
            </if>
            <if test="endDatetimeStr != null and endDatetimeStr != ''">
                AND     A.event_datetime <![CDATA[ <= ]]> (#{endDatetimeStr} || ' ' || #{endDatetimeHour} ||':59:59')::timestamp
            </if>
        </trim>
        order by A.event_datetime DESC
        <if test="pageIndex != null">
            LIMIT       ${pageRowNumber} OFFSET ${pageIndex}
        </if>;
    </select>

    <!--
        알림센터 이력 목록 갯수를 가져온다.
        @author psb
    -->
    <select id="findCountNotification" parameterType="map" resultType="java.lang.Integer" >
        SELECT count(*)
        FROM    isaver.notification as A
        INNER JOIN isaver.area AREA
        ON      A.area_id = AREA.area_id
        INNER JOIN isaver.code COD
        ON      A.critical_level = COD.code_id
        AND     COD.group_code_id = 'LEV'
        INNER JOIN isaver.device AS DEVICE
        ON      A.device_id = DEVICE.device_id
        INNER JOIN isaver.event EVENT
        ON      A.event_id = EVENT.event_id
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="areaId != null and areaId != ''">
                AND     AREA.area_id = #{areaId}
            </if>
            <if test="deviceCode != null and deviceCode != ''">
                AND     DEVICE.device_code  = #{deviceCode}
            </if>
            <if test="eventId != null and eventId != ''">
                AND     A.event_id  = #{eventId}
            </if>
            <if test="fenceId != null and fenceId != ''">
                AND     A.fence_id  = #{fenceId}
            </if>
            <if test="criticalLevel != null and criticalLevel != ''">
                AND     A.critical_level  = #{criticalLevel}
            </if>
            <if test="startDatetimeStr != null and startDatetimeStr != ''">
                AND     A.event_datetime <![CDATA[ >= ]]> (#{startDatetimeStr} || ' ' || #{startDatetimeHour} ||':00:00')::timestamp
            </if>
            <if test="endDatetimeStr != null and endDatetimeStr != ''">
                AND     A.event_datetime <![CDATA[ <= ]]> (#{endDatetimeStr} || ' ' || #{endDatetimeHour} ||':59:59')::timestamp
            </if>
        </trim>
    </select>

    <!--
        알림센터 목록을 가져온다.
        @author psb
    -->
    <select id="findListNotificationForDashboard" resultType="NotificationBean" parameterType="map" >
        SELECT  A.notification_id as notificationId
                , A.event_log_id as eventLogId
                , A.object_id as objectId
                , A.fence_id as fenceId
                , f.fence_name as fenceName
                , A.status as status
                , A.area_id as areaId
                , AREA.area_name as areaName
                , A.device_id as deviceId
                , DEVICE.device_name as deviceName
                , A.event_id as eventId
                , EVENT.event_name as eventName
                , A.event_datetime as eventDatetime
                , A.critical_level as criticalLevel
                , A.confirm_user_id as confirmUserId
                , (select user_name from isaver.users where user_id=A.confirm_user_id) as confirmUserName
                , A.confirm_datetime as confirmDatetime
                , A.cancel_user_id as cancelUserId
                , (select user_name from isaver.users where user_id=A.cancel_user_id) as cancelUserName
                , A.cancel_datetime as cancelDatetime
                , A.cancel_desc as cancelDesc
                , A.insert_user_id as insertUserId
                , (select user_name from isaver.users where user_id=A.insert_user_id) as insertUserName
                , A.insert_datetime as insertDatetime
                , A.update_user_id as updateUserId
                , (select user_name from isaver.users where user_id=A.update_user_id) as updateUserName
                , A.update_datetime as updateDatetime
                , A.value as value
                , (select count(*) from isaver.fence_device FD where FD.uuid = f.uuid) as cameraCnt
        FROM    isaver.notification as A
        INNER JOIN isaver.area AREA
        ON      A.area_id = AREA.area_id
        INNER JOIN isaver.device AS DEVICE
        ON      A.device_id = DEVICE.device_id
        INNER JOIN isaver.event EVENT
        ON      A.event_id = EVENT.event_id
        LEFT OUTER JOIN isaver.fence f
        ON	    A.fence_id = f.fence_id
        AND     A.device_id = f.device_id
        WHERE   A.cancel_user_id is null
    </select>


    <!--
        알림센터 목록을 가져온다. (스쿨존)
        @author psb
    -->
    <select id="findListNotificationForSchool" resultType="NotificationBean" parameterType="map" >
        SELECT  A.notification_id as notificationId
                , A.fence_id as fenceId
                , A.device_id as deviceId
                , A.event_id as eventId
                , A.event_datetime as eventDatetime
                , A.critical_level as criticalLevel
                , A.value as value
        FROM    isaver.notification A
        INNER JOIN isaver.fence F
        ON	    A.fence_id = F.fence_id
        AND	    F.fence_sub_type is not null
        WHERE   A.area_id = #{areaId}
        <if test="startDatetime != null and startDatetime != ''">
            AND     A.event_datetime between (#{startDatetime}||' 00:00:00')::timestamp and (#{startDatetime}||' 23:59:59')::timestamp
        </if>
    </select>

    <!--
        알림센터 목록을 가져온다. (카운트용)
        @author psb
    -->
    <select id="findListNotificationForDashboardCount" resultType="NotificationBean" >
        SELECT  A.critical_level as criticalLevel
                , count(A.notification_id) as notiCnt
        FROM    isaver.notification as A
        INNER JOIN isaver.area AREA
        ON      A.area_id = AREA.area_id
        INNER JOIN (
            SELECT  DEV.device_id, CODE.code_name
            FROM    isaver.device DEV
            INNER JOIN  isaver.code CODE
            ON      DEV.device_code = CODE.code_id
        ) AS DEVICE
        ON      A.device_id = DEVICE.device_id
        INNER JOIN isaver.event EVENT
        ON      A.event_id = EVENT.event_id
        WHERE   A.cancel_user_id is null
        GROUP BY A.critical_level
    </select>

    <!--
        알림센터를 저장한다. (해제, 확인)
        @author psb
    -->
    <update id="saveNotification" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";">
            update  isaver.notification
            set     <if test="item.actionType == 'confirm'">
                        confirm_user_id = #{item.updateUserId}
                        , confirm_datetime = #{item.updateDatetime}::timestamp
                    </if>
                    <if test="item.actionType == 'cancel'">
                        cancel_user_id = #{item.updateUserId}
                        , cancel_datetime = #{item.updateDatetime}::timestamp
                        <if test="item.cancelDesc != null and item.cancelDesc != ''">
                            , cancel_desc = #{item.cancelDesc}
                        </if>
                    </if>
            where   notification_id = #{item.notificationId}
        </foreach>
    </update>

    <!--
        알림센터 전체를 해제한다.
        @author psb
    -->
    <update id="allCancelNotification" parameterType="map">
        update  isaver.notification
        set     cancel_user_id = #{updateUserId}
                , cancel_datetime = now()
                , cancel_desc = #{cancelDesc}
        where   cancel_user_id is null
        <if test="areaIds != null and areaIds != ''">
            AND area_id in
            <foreach collection="areaIds" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="criticalLevel != null and criticalLevel != ''">
            AND critical_level = #{criticalLevel}
        </if>
    </update>

    <!--
        알림센터 목록을 가져온다. 히트맵용
        @author psb
    -->
    <select id="findListNotificationForHeatMap" resultType="NotificationBean" parameterType="map" >
        SELECT  area_id as areaId
                , device_id as deviceId
                , object_id as objectId
                , fence_id as fenceId
                , tracking_json as trackingJson
        FROM    isaver.notification
        WHERE   area_id = #{areaId}
        AND     tracking_json is not null
        AND 	tracking_json <![CDATA[ <> ]]> '[]'
        <if test="startDatetimeStr != null and startDatetimeStr != ''">
            AND     event_datetime <![CDATA[ >= ]]> #{startDatetimeStr}::timestamp
        </if>
        <if test="endDatetimeStr != null and endDatetimeStr != ''">
            AND     event_datetime <![CDATA[ <= ]]> #{endDatetimeStr}::timestamp
        </if>
        <if test="fenceId != null and fenceId != ''">
            AND     fence_id = #{fenceId}
        </if>
    </select>

    <!--
        알림센터 이력 목록을 가져온다. Excel 저장용
        @author psb
    -->
    <select id="findListNotificationExcel" resultType="NotificationBean" parameterType="map" >
        SELECT  to_char(A.event_datetime,'yyyy-MM-dd HH24:MI:ss') as eventDatetimeStr
                , AREA.area_name as areaName
                , DEVICE.device_name as deviceName
                , f.fence_name as fenceName
                , EVENT.event_name as eventName
                , COD.code_name as criticalLevelName
                , (select user_name from isaver.users where user_id=A.confirm_user_id) as confirmUserName
                , to_char(A.confirm_datetime,'yyyy-MM-dd HH24:MI:ss') as confirmDatetimeStr
                , (select user_name from isaver.users where user_id=A.cancel_user_id) as cancelUserName
                , to_char(A.cancel_datetime,'yyyy-MM-dd HH24:MI:ss') as cancelDatetimeStr
                , A.cancel_desc as cancelDesc
                , A.tracking_json as trackingJson
        FROM    isaver.notification as A
        INNER JOIN isaver.area AREA
        ON      A.area_id = AREA.area_id
        INNER JOIN isaver.code COD
        ON      A.critical_level = COD.code_id
        AND     COD.group_code_id = 'LEV'
        INNER JOIN isaver.device AS DEVICE
        ON      A.device_id = DEVICE.device_id
        INNER JOIN isaver.event EVENT
        ON      A.event_id = EVENT.event_id
        LEFT OUTER JOIN isaver.fence f
        ON      A.fence_id = f.fence_id
        AND 	A.device_id = f.device_id
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="areaId != null and areaId != ''">
                AND     AREA.area_id = #{areaId}
            </if>
            <if test="deviceCode != null and deviceCode != ''">
                AND     DEVICE.device_code  = #{deviceCode}
            </if>
            <if test="eventId != null and eventId != ''">
                AND     A.event_id  = #{eventId}
            </if>
            <if test="fenceId != null and fenceId != ''">
                AND     A.fence_id  = #{fenceId}
            </if>
            <if test="criticalLevel != null and criticalLevel != ''">
                AND     A.critical_level  = #{criticalLevel}
            </if>
            <if test="startDatetimeStr != null and startDatetimeStr != ''">
                AND     A.event_datetime <![CDATA[ >= ]]> (#{startDatetimeStr} || ' ' || #{startDatetimeHour} ||':00:00')::timestamp
            </if>
            <if test="endDatetimeStr != null and endDatetimeStr != ''">
                AND     A.event_datetime <![CDATA[ <= ]]> (#{endDatetimeStr} || ' ' || #{endDatetimeHour} ||':59:59')::timestamp
            </if>
            <if test="type != null and type != ''">
                AND     A.tracking_json is not null
            </if>
        </trim>
        order by A.event_datetime DESC
    </select>
</mapper>