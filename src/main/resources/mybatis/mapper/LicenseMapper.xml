<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.icent.isaver.admin.dao.LicenseDao" >

  <!--
    라이선스 목록을 가져온다.
    @author dhj
  -->
  <select id="findListLicense" resultType="LicenseBean" parameterType="map" >

    select license_key as licenseKey
      , DEV02.code_name as deviceCode
      , license_count as licenseCount
      , expire_date as expireDate
      , insert_user_id as insertUserId
      , insert_datetime as insertDatetime
      , update_user_id as updateUserId
      , update_datetime as updateDatetime
      , (select user_name from isaver.users where user_id=A.insert_user_id) as insertUserName
      , (select user_name from isaver.users where user_id=A.update_user_id) as updateUserName
    from isaver.license A
    INNER JOIN
    (
    SELECT    code_id, code_name FROM isaver.code
    WHERE     group_code_id = 'DEV'
    ) AS DEV02
    ON      A.device_code = DEV02.code_id
    <where>
      <if test="licenseKey != null and licenseKey != ''">
        AND     A.license_key like '%${licenseKey}%'
      </if>
      <if test="deviceCode != null and deviceCode != ''">
        AND     A.device_code = #{deviceCode}
      </if>
      <if test="expireStartDate != null and expireStartDate != ''">
        AND     A.expire_date <![CDATA[ >= ]]> to_char(#{expireStartDate}::timestamp,'yyyyMMdd')
      </if>
      <if test="expireEndDate != null and expireEndDate != ''">
        AND     A.expire_date <![CDATA[ <= ]]> to_char(#{expireEndDate}::timestamp,'yyyyMMdd')
      </if>
    </where>
    order by A.insert_datetime DESC

  </select>


  <!--
    라이선스 목록 갯수를 가져온다.
    @author dhj
  -->
  <select id="findCountLicense" resultType="java.lang.Integer" parameterType="map">

    SELECT count(license_key) FROM isaver.license A
    <where>
      <if test="licenseKey != null and licenseKey != ''">
        AND     A.license_key like '%${licenseKey}%'
      </if>
      <if test="deviceCode != null and deviceCode != ''">
        AND     A.device_code = #{deviceCode}
      </if>
    </where>
  </select>

  <!--
    라이선스 상세를 가져온다.
    @author dhj
  -->
  <select id="findByLicense" resultType="LicenseBean" parameterType="map" >
    select license_key as licenseKey
      , device_code as deviceCode
      , license_count as licenseCount
      , expire_date as expireDate
      , insert_user_id as insertUserId
      , insert_datetime as insertDatetime
      , update_user_id as updateUserId
      , update_datetime as updateDatetime
      , (select user_name from isaver.users where user_id=A.insert_user_id) as insertUserName
      , (select user_name from isaver.users where user_id=A.update_user_id) as updateUserName
    from isaver.license A
    <where>
      <if test="licenseKey != null and licenseKey != ''">
        AND     A.license_key = #{licenseKey}
      </if>
      <if test="deviceCode != null and deviceCode != ''">
        AND     A.device_code = #{deviceCode}
      </if>
    </where>
  </select>


  <!--
    라이선스를 등록한다.
    @author dhj
  -->
  <insert id="addLicense" parameterType="map" >
    insert into isaver.license (
      license_key
      , device_code
      , license_count
      , expire_date
      , insert_user_id
      , insert_datetime
    ) values (
    #{licenseKey,jdbcType=VARCHAR}
    , #{deviceCode,jdbcType=CHAR}
    , ${licenseCount}
    , #{expireDate,jdbcType=VARCHAR}
    , #{insertUserId,jdbcType=VARCHAR}
    , NOW()
    );
  </insert>

  <!--
    라이선스를 저장한다.
    @author dhj
  -->
  <update id="saveLicense" parameterType="map" >
    update isaver.license
    set device_code = #{deviceCode,jdbcType=CHAR},
      license_count = ${licenseCount},
      expire_date = #{expireDate,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      update_datetime = NOW()
    where license_key = #{licenseKey,jdbcType=VARCHAR}
  </update>

  <!--
    라이선스를 제거한다.
    @author dhj
    -->
  <delete id="removeLicense" parameterType="map" >
    delete from isaver.license
    where license_key = #{licenseKey,jdbcType=VARCHAR}
  </delete>

</mapper>